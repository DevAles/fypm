#!/bin/zsh

DIVISORY="----------------------"
BASE_FILTER='-DELETED and -COMPLETED'

usage() {
    echo "Usage: tacopend [OPTION]"
    echo
    echo "Options:"
    echo "  --no-parents    Exclude recurring tasks from the count."
    echo "  -h, --help      Show this help message and exit."
}
verify_args() {
    PARENTS=false

    if [[ $1 == "--no-parents" ]]; then
        PARENTS=true
    elif [[ $1 == "--help" || $1 == "-h" ]]; then
        usage
        exit 0
    fi
}

select_prop() {
    local PROPERTY=$1
    local VALUE=$2

    SELECTED=$(echo $TASKS_JSON | jq -r "[ .[] | select(.$PROPERTY == \"$VALUE\") ]")

    echo $SELECTED
}
get_tasks() {
    TASKS_JSON=$(task "($BASE_FILTER)" export)
    ALL_PENDING=$(echo $TASKS_JSON | jq -r 'length')

    NECESSITY_TASKS=$(select_prop "STYLE" "Necessity")
    APOLLONIAN_TASKS=$(select_prop "STYLE" "Apollonian")
    DIONYSIAN_TASKS=$(select_prop "STYLE" "Dionysian")

    HABIT_TASKS=$(select_prop "TYPE" "Habit")
    EVENTUAL_TASKS=$(select_prop "TYPE" "Eventual")
    OBJECTIVE_TASKS=$(select_prop "TYPE" "Objective")
    CONTINUOUS_TASKS=$(select_prop "TYPE" "Continuous")
    SUBTASK_TASKS=$(select_prop "TYPE" "SubTask")
    EVENT_TASKS=$(select_prop "TYPE" "Event")
    CHECK_TASKS=$(select_prop "TYPE" "Check")

    TYPE_NONE=$(echo $TASKS_JSON | jq -r "[ .[] | select(.TYPE == null) ] | length")
    STYLE_NONE=$(echo $TASKS_JSON | jq -r "[ .[] | select(.STYLE == null) ] | length")
}
get_counts() {
    if [[ $PARENTS == false ]]; then
        NECESSITY=$(echo "$NECESSITY_TASKS" | jq -r 'length')
        APOLLONIAN=$(echo "$APOLLONIAN_TASKS" | jq -r 'length')
        DIONYSIAN=$(echo "$DIONYSIAN_TASKS" | jq -r 'length')

        HABIT=$(echo $HABIT_TASKS | jq -r 'length')
        EVENT=$(echo $EVENT_TASKS | jq -r 'length')
        CHECK=$(echo $CHECK_TASKS | jq -r 'length')
    else
        NECESSITY=$(echo "$NECESSITY_TASKS" | jq -r "[ .[] | select(.status != \"recurring\") ] | length")
        APOLLONIAN=$(echo "$APOLLONIAN_TASKS" | jq -r "[ .[] | select(.status != \"recurring\") ] | length")
        DIONYSIAN=$(echo "$DIONYSIAN_TASKS" | jq -r "[ .[] | select(.status != \"recurring\") ] | length")

        HABIT=$(echo $HABIT_TASKS | jq -r "[ .[] | select(.status != \"recurring\") ] | length")
        EVENT=$(echo $EVENT_TASKS | jq -r "[ .[] | select(.status != \"recurring\") ] | length")
        CHECK=$(echo $CHECK_TASKS | jq -r "[ .[] | select(.status != \"recurring\") ] | length")
    fi

    EVENTUAL=$(echo $EVENTUAL_TASKS | jq -r 'length')
    OBJECTIVE=$(echo $OBJECTIVE_TASKS | jq -r 'length')
    CONTINUOUS=$(echo $CONTINUOUS_TASKS | jq -r 'length')
    SUBTASK=$(echo $SUBTASK_TASKS | jq -r 'length')
    
}
print_counts() {
    echo "All Pending tasks count: $ALL_PENDING"
    echo "$DIVISORY"
    echo "Necessity tasks count: $NECESSITY ($((ALL_PENDING - NECESSITY)))"
    echo "Apollonian tasks count: $APOLLONIAN ($((ALL_PENDING - APOLLONIAN)))"
    echo "Dionysian tasks count: $DIONYSIAN ($((ALL_PENDING - DIONYSIAN)))"
    echo "STYLE none tasks count: $STYLE_NONE"
    echo "$DIVISORY"
    echo "Habit tasks count: $HABIT ($((ALL_PENDING - HABIT)))"
    echo "Eventual tasks count: $EVENTUAL ($((ALL_PENDING - EVENTUAL)))"
    echo "Objective tasks count: $OBJECTIVE ($((ALL_PENDING - OBJECTIVE)))"
    echo "Continuous tasks count: $CONTINUOUS ($((ALL_PENDING - CONTINUOUS)))"
    echo "Subtask tasks count: $SUBTASK ($((ALL_PENDING - SUBTASK)))"
    echo "Event tasks count: $EVENT ($((ALL_PENDING - EVENT)))"
    echo "Check tasks count: $CHECK ($((ALL_PENDING - CHECK)))"
    echo "TYPE none tasks count: $TYPE_NONE"
    echo
    echo "OBS: The count in parentheses is the total of tasks without the respective counting."
}
main() {
    get_tasks
    
    get_counts

    print_counts
}

verify_args $@ || exit 1
main
