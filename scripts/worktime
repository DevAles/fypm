#!/bin/zsh

VIEWER='twui'
VIEWER_QUIT='q'
LAST_WT_PATH=/var/tmp/.last_work_time
WORKTIMES_MSG="Avaiable worktimes: Highlevel, School, Food, Highload, Relax, Sleep"

define_values() {
    local CURRENT_WT

    CURRENT_WT=$(cat /var/tmp/current_work_time)

    echo "$1 -> $4" > /var/tmp/current_work_time
    echo "$2" > /var/tmp/current_polybar_b_wt_color
    echo "$3" > /var/tmp/current_polybar_f_wt_color
    echo "$CURRENT_WT" > "$LAST_WT_PATH"

    notify-send -u critical "Worktime:" "$1"

    update_filters "$4"
}
update_filters() {
    local VIT_CFG_LINE
    local TWUI_CFG_LINE
    local WT

    WT=$WORKTIME
    FINAL_TIME=$1

    VIT_CFG_LINE='report.wlist.filter'
    TWUI_CFG_LINE='report.next.filter'

    update() {
        local CFG_LINE
        local WORKTIME_FILTER
        local HABIT_FILTER
        local MAIN_FILTER
        local FINAL_FILTER
        local REGEX
        local WT

        CFG_LINE=$1
        WT=$2

        mount_wt_filter() {
            local WT
            local BASESTR
            local SCHDSTR
            local GOALSTR
            local ALARMSTR
            GOALSTR="(GOAL.after:$(date +%Y-%m-01) and GOAL.before:now and TYPE:Objective)"
            ESSENTSTR='(+TODAY and +INSTANCE)'
	        ALARMSTR="(ALARM.after:now and ALARM.before:$FINAL_TIME)"

            WT=$1

            BASESTR="(WT:$WT or WT:AllDay) and ($ESSENTSTR or $GOALSTR or $ALARMSTR)"
            echo "($BASESTR)"
        }

        if [[ "$WT" == "Break" ]] || [[ "$WT" == "PreSleep" ]]; then
            FILTER1=$(mount_wt_filter Break)
            FILTER2=$(mount_wt_filter PreSleep)

            if [[ ! "$WT" == "PreSleep" ]]; then
                WORKTIME_FILTER="$FILTER1"
            else
                WORKTIME_FILTER="$FILTER1 or $FILTER2"
            fi
	    else
            WORKTIME_FILTER="$(mount_wt_filter "$WT")"
        fi

        HABIT_FILTER="($DUE_FILTER and WT:AllDay and (status.not:recurring and status.not:waiting))"
        MAIN_FILTER="($TW_FILTER or $WORKTIME_FILTER) and status:pending"
        FINAL_FILTER="($MAIN_FILTER) or $HABIT_FILTER"

        REGEX="s/$CFG_LINE.*/$CFG_LINE=$FINAL_FILTER/"

        sed -i "$REGEX" ~/.taskrc

        #update-vit-taskrc
    }

    #update $VIT_CFG_LINE $WT
    update $TWUI_CFG_LINE $WT
}
update_vit_twui_session() {
    if tmux has-session -t TaskWarrior 2>/dev/null; then
        tmux send-keys -t TaskWarrior:1.1 "$VIEWER_QUIT" C-m
        sleep 1
        tmux send-keys -t TaskWarrior:1.1 "$VIEWER" C-m
    else
        xdotool mousemove 2400 450
        bspc desktop -f "^5"

        taopen > /dev/null 2& disown %1
    fi
}

if [[ -z "$1" ]]; then
    echo $WORKTIMES_MSG
    exit 1
else
    export WORKTIME=$1
fi


# ------------------- #
# Change this based on your worktimes and actions to do at each worktime
case $1 in
    "Highlevel")
        define_values "Highlevel" "#af0" "#111" "04:00"
        ;;
    "School")
        define_values "School" "#f70" "#111" "06:00"
        ;;
    "Food")
        define_values "Food" "#393" "#111" "13:00"
        ;;
    "Highload")
        define_values "Highload" "#e44" "#eee" "14:00"
        ;;
    "Relax")
        define_values "Relax" "#06f" "#111" "18:00"
        ;;
    "Break")
        define_values "Break" "#06c" "#111"
        ;;
    "Sleep")
        define_values "Sleep" "#666" "#111" "19:00"
        ;;
    "last")
        worktime $(cat "$LAST_WT_PATH")
        exit 0
        ;;
    *)
        echo $WORKTIMES_MSG
        exit 1
esac


# ------------------- #


update_vit_twui_session

polybar-msg cmd restart
