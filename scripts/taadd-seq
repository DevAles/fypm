#!/bin/zsh
# $1 = Type
# $2 = Description
# $3 = Tag
# $4 = Temp Number
# $5 = Sequence/Temp Last Episode Number
# $6 = Initial Ep Number

TYPE=$1
DESCRIPTION=$2
TAG=$3
TEMP=$4
LAST_EP=$5

usage() {
    echo "Usage: taadd-seq _<TYPE> <DESCRIPTION> <TAG> <TEMP> <LAST_EP_NUMBER> [INITIAL_EP_NUMBER]"
}
verify_args() {
    if [[ $# -lt 5 ]]; then
        usage
        return 1
    elif [[ $# -gt 6 ]]; then
        usage
        return 1
    else
        if [[ -n $6 ]]; then
            INITIAL=$6
        else
            INITIAL=1
        fi
    fi
}
get_id() {
    read -r id;
    echo $id | grep -oP 'Created task \K\d+(?=\.)'
}
main() {
    MOTHER_ID=$(yes | taadd -y "$DESCRIPTION (Temp $TEMP)" Lazer.Watch Dionysian Objective +Sequence "+$TYPE" | get_id)

    for ((i=$INITIAL; i <= $LAST_EP; i++)); do
        ARGS=("$MOTHER_ID" "$TAG: T${TEMP}E${i}" "STYLE:Dionysian" "+Sequence" "+$TYPE")

        if [[ $i -eq $INITIAL ]]; then
            # Create new task
            CURRENT_TASK_ID=$(taaddsub "${ARGS[@]}" | get_id)

            # Set current task as previous on variable
            PREVIOUS_TASK_UUID=$(task "$CURRENT_TASK_ID" uuids)
        else
            if [[ -n $PREVIOUS_TASK_UUID ]]; then
                # Create new task and set your previous task
                CURRENT_TASK_ID=$(taaddsub "${ARGS[@]}" | get_id)
                CURRENT_TASK_UUID=$(task "$CURRENT_TASK_ID" uuids)

                # Set next and previous UDA's
                task "$CURRENT_TASK_UUID" modify SEQ_PREVIOUS:"$PREVIOUS_TASK_UUID"
                task "$PREVIOUS_TASK_UUID" modify SEQ_NEXT:"$CURRENT_TASK_UUID"

                # Set current task as previous on variable
                PREVIOUS_TASK_UUID=$(task "$CURRENT_TASK_ID" uuids)
            else
                echo "Something went wrong! The iterator isn't the initial ep, but has no previous task id!"
                exit 1
            fi
        fi
    done
}
verify_args $@ || exit 1
main
