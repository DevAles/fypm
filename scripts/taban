#!/bin/zsh
ABANDONED="false"
ARCHIVED="false"
FAILED="false"
NOCONTROL="false"

usage() {
    echo "Usage: taban <OPTION> <task_id> [annotation]"
    echo
    echo "Options:"
    echo "      -a, --abandoned (requires annotation)"
    echo "      -c, --archived"
    echo "      -f, --failed"
    echo "      -n, --no-control (requires annotation)"
}
main() {
    local TASKS_LENGHT
    TASKS_LENGHT=$(task "$FILTER" count)

    if [[ "$ABANDONED" == "true" ]]; then
        if [[ "$TASKS_LENGHT" -gt 2 ]]; then
            oyes "all" "no" | task "$FILTER" modify +Abandoned
        else
            yes "no" | task "$FILTER" modify +Abandoned
        fi
    elif [[ "$FAILED" == "true" ]]; then
        if [[ "$TASKS_LENGHT" -gt 2 ]]; then
            oyes "all" "no" | task "$FILTER" modify +Failed
        else
            yes "no" | task "$FILTER" modify +Failed
        fi
    elif [[ "$NOCONTROL" == "true" ]]; then
        if [[ "$TASKS_LENGHT" -gt 2 ]]; then
            oyes "all" "no" | task "$FILTER" modify +NoControl
        else
            yes "no" | task "$FILTER" modify +NoControl
        fi
    elif [[ "$ARCHIVED" == "true" ]]; then
        BASE_FILTER='-DELETED and -COMPLETED'
        FILTER="($FILTER and $BASE_FILTER)"

        if [[ "$TASKS_LENGHT" -gt 2 ]]; then
            oyes "all" "no" | task "$FILTER" modify +Archived
        else
            yes "no" | task "$FILTER" modify +Archived
        fi
    fi

    if [[ "$TASKS_LENGHT" -gt 1 ]]; then
        oyes "all" "no" | task "$FILTER" delete
    else
        oyes "yes" "no" | task "$FILTER" delete
    fi
}

if [[ $# -gt 3 ]]; then
    echo "Too many arguments!"
    usage
    exit 1
elif [[ $# -lt 2 ]]; then
    echo "Not enough arguments!"
    usage
    exit 1
else
    OPTION=$1
    FILTER=$2
    ANNOTATION=$3 # Optional / Required in NoControl

    case "$OPTION" in
        "-f" | "--failed")
            FAILED="true"
            ;;
        "-n" | "--no-control")
            NOCONTROL="true"

            if [[ -z "$3" ]]; then
                echo "Annotation is required for NoControl!"
                exit 1;
            fi
            ;;
        "-a" | "--abandoned")
            ABANDONED="true"

            if [[ -z "$3" ]]; then
                echo "Annotation is required for Abandoned!"
                exit 1;
            fi
            ;;
        "-c" | "--archived")
            ARCHIVED="true"
            ;;
        *)
            echo "Unknown option: $1"
            usage
            exit 1
            ;;
    esac

    if [[ $# -eq 3 ]]; then
        tan "$FILTER" "$ANNOTATION"
    fi
fi

main
